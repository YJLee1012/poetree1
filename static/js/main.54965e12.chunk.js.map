{"version":3,"sources":["Mypage.js","img/4.jpg","Search.js","components/Auth/styles.js","constants/actionTypes.js","api/index.js","actions/auth.js","components/Auth/Auth.js","actions/posts.js","img/1.jpg","components/Posts/Post/Post.js","components/Posts/Posts/styles.js","components/Posts/Posts/Posts.js","components/List/List.js","components/List/Detail.js","actions/comment.js","img/b.jpg","img/bada.png","img/pen.png","img/2.jpg","img/3.jpg","img/note1.jpg","components/Form/Form.js","components/Navbar/NavbarElement.js","img/favicon.png","components/Navbar/index.js","components/Sidebar/SidebarElements.js","components/Sidebar/index.js","img/6.jpg","img/5.jpg","img/9.jpg","img/7.jpg","img/8.jpg","img/10.jpg","components/Home/Home.js","img/bgbg.png","video/video1.mp4","video/video2.mp4","video/video3.mp4","video/video4.mp4","components/About/About.js","components/Admin/Admin.js","components/Scroll/styles.js","components/Scroll/Scroll.js","App.js","reducers/auth.js","reducers/index.js","reducers/posts.js","reducers/comments.js","index.js"],"names":["Mypage","history","useHistory","useState","name","setName","image","setImage","tab","setTab","user","JSON","parse","localStorage","getItem","useEffect","push","data","result","imageUrl","className","style","textAlign","marginTop","src","Nav","variant","defaultActiveKey","Item","Link","eventKey","onClick","Search","makeStyles","theme","paper","spacing","display","flexDirection","alignItems","padding","form","width","submit","margin","CREATE","UPDATE","DELETE","FETCH_ALL","LIKE","GET_POST","AUTH","LOGOUT","COMMENT","COM_UPDATE","COM_DELETE","HASHTAG","API","axios","create","baseURL","interceptors","request","use","req","headers","Authorization","token","getPost","id","get","likePost","post","updatePost","updatedPost","put","deletePost","delete","createComment","newComment","updateComment","commentId","updatedComment","deleteComment","googlelogin","googleData","router","dispatch","a","api","console","log","type","Auth","useDispatch","classes","useStyles","googleSuccess","res","profileObj","email","provider","error","Container","component","maxWidth","Paper","elevation","Typography","clientId","buttonText","onSuccess","onFailure","cooliePlicy","getPosts","payload","message","Post","setCurrentId","Likes","likes","fontSize","img1","title","moment","createdAt","fromNow","UserEmail","color","size","hashtags","CardActions","disabled","content","Posts","posts","useSelector","state","React","Aos","init","length","map","data-aos","data-aos-duration","CircularProgress","List","currentId","Grow","in","Grid","container","justify","item","xs","Comment","commentIn","setCommentIn","commentBtn","charAt","height","placeholder","value","onChange","e","target","Button","CommentList","comment","commenterName","Detail","setCommentId","comments","preventDefault","clear","alert","commenter","Form","postData","setPostData","note","onSubmit","newPost","createPost","TextField","label","fullWidth","styled","nav","NavbarContainer","div","Logo","NavLogo","LinkR","MobileIcon","NavMenu","ul","NavItem","li","NavLinks","NavBtn","NavBtnLink","Navbar","toggle","location","useLocation","setUser","decode","exp","Date","getTime","logout","actionType","poetreeLogo","alt","to","fontFamily","role","SidebarContainer","aside","isOpen","Icon","CloseIcon","FaTimes","SidebarWrapper","SidebarMenu","SidebarLink","LinkS","SideBtnWrap","SidebarRoute","Sidebar","Home","today","month","getMonth","date","getDate","currentSlide","setCurrentSlide","images","img10","img9","img6","Array","isArray","overflow","img","i","data-aos-delay","data-aos-easing","href","top","left","About","imgB","marginBottom","imgPen","Admin","setImg","formData","FormData","append","files","toTop","zIndex","position","bottom","backgroundColor","transition","breakpoints","up","right","Scroll","showBelow","show","setShow","handleScroll","window","pageYOffset","addEventListener","removeEventListener","IconButton","behavior","aria-label","App","setIsOpen","exact","path","authReducer","authData","action","setItem","stringify","loading","errors","reducers","combineReducers","sessionStorage","filter","auth","store","createStore","compose","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.54965e12.chunk.js","sourcesContent":["import React, { Component, useEffect, useState } from 'react'\r\nimport './Mypage.css'\r\nimport { Nav } from 'react-bootstrap';\r\nimport { Link, Route, Switch, useHistory } from 'react-router-dom';\r\n\r\n\r\n\r\nfunction Mypage(){\r\n\r\n        let history = useHistory();\r\n        let [name,setName] = useState('');\r\n        let [image,setImage] = useState('');\r\n\r\n        let [tab,setTab] = useState(0);\r\n\r\n        const user = JSON.parse(localStorage.getItem('profile'));\r\n\r\n        useEffect(()=>{\r\n                //userData값이 있으면 실행 없으면 로그인 페이지로 이동\r\n                if(user===null){\r\n                        history.push('/login')}\r\n                else{\r\n                        const data = JSON.parse(localStorage.getItem('profile')).result\r\n                        // console.log(data.Name);\r\n                        setName(data.name)\r\n                        setImage(data.imageUrl)\r\n                }\r\n        },[])\r\n        return( \r\n        <div className=\"Mypage\">\r\n                <div className=\"container\">\r\n                        <h4 style={{textAlign:'left', marginTop:'50px'}}>마이페이지</h4>\r\n                        <div className=\"user\">\r\n                        <img src={image}></img>\r\n                        <div className=\"user-info\">\r\n                        <div className=\"user-name\"> {name} </div>\r\n                        <div className=\"\"> {name}님의 작품을 확인해보세요. </div>\r\n                        </div>\r\n                        </div>\r\n\r\n                        {/* tab버튼들 만들어 */}\r\n                <Nav className= \"mt-5\" variant=\"tabs\" defaultActiveKey=\"tab-0\">\r\n                <Nav.Item>\r\n                <Nav.Link eventKey=\"tab-0\" onClick={()=>{setTab(0)}}>나의 시집</Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                <Nav.Link eventKey=\"tab-1\" onClick={()=>{setTab(1)}}>좋아요한 글</Nav.Link>\r\n                </Nav.Item>\r\n                </Nav>\r\n\r\n                <tabContent tab={tab}/>\r\n               </div>\r\n\r\n                \r\n        </div>\r\n                \r\n        )\r\n        function tabContent(props){\r\n                if(props.tab ===0){\r\n                        return <div>내가 쓴 시, 사진들 넣기</div>\r\n                }else if(props.tab ===1){\r\n                        return <div>좋아요한 글, 사진들 넣기</div>\r\n                }\r\n        }\r\n}export default Mypage\r\n\r\n//layout\r\n//scss\r\n\r\n","export default __webpack_public_path__ + \"static/media/4.1ead2516.jpg\";","import React, {useEffect, useState} from 'react';\r\nimport { useHistory ,useParams } from 'react-router-dom';\r\nimport { Link, Route, Switch } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nimport PoetList from './PoetList.js';\r\n\r\nfunction Search(props){\r\n    // 시목록state 안에서 검색값 있는지 찾기\r\n    // let result= 시목록.\r\n    //찾아서 있으면 그것의 시목록만 뽑아서 출력 poetlist \r\n    let history=useHistory();\r\n    return(\r\n        {\r\n            // map을 이용해서 title, content값 배열로 만들기//굳이 안해도 될듯\r\n            // 검색한 값 검색state에 넣기(검색변경 이용) title,content 값 검색\r\n            // find함수 이용해서 시목록에서 검색값 있는지 찾고 출력은 <PoetList 이용>\r\n            // find 와 filter 다른점?\r\n            \r\n        }\r\n    )\r\n}\r\nexport default Search;","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(2),\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));","export const CREATE = 'CREATE';\r\nexport const UPDATE = 'UPDATE';\r\nexport const DELETE = 'DELETE';\r\nexport const FETCH_ALL = 'FETCH_ALL';\r\nexport const LIKE = 'LIKE';\r\nexport const GET_POST = 'GET_POST';\r\n\r\nexport const AUTH = 'AUTH';\r\nexport const LOGOUT = 'LOGOUT';\r\n\r\nexport const COMMENT = 'COMMENT';\r\nexport const COM_UPDATE = 'COM_UPDATE';\r\nexport const COM_DELETE = 'COM_DELETE';\r\n\r\nexport const HASHTAG = 'HASHTAG';","import axios from 'axios';\r\n \r\nconst API = axios.create({ baseURL: \"http://54.180.34.121:8080/\" });\r\n\r\n//각 요청들을 수행하기 위해서\r\n//토큰을 백엔드로 보내야 백엔드 미들웨어는 실제로 로그인 했는지 알 수 있음\r\nAPI.interceptors.request.use((req) => {\r\n  if (localStorage.getItem('profile')) {\r\n    req.headers.Authorization = `Bearer ${JSON.parse(localStorage.getItem('profile')).token}`;\r\n  }\r\n  return req;\r\n});\r\n\r\nexport const fetchPosts = () => API.get('/posts');\r\nexport const getPost = (id) => API.get(`/posts/${id}`);\r\n// newPost 파라미터는 전체 posts \r\nexport const createPost = (newPost) => API.post('/posts', newPost);\r\nexport const likePost = (id) => API.post(`/posts/${id}/like`);\r\nexport const updatePost = (id, updatedPost) => API.put(`/posts/${id}`, updatedPost);\r\nexport const deletePost = (id) => API.delete(`/posts/${id}`);\r\n\r\n// export const getComments = () => API.get('');\r\nexport const createComment = (id, newComment) => API.post(`/posts/${id}/comment`,newComment);\r\nexport const updateComment = (id, commentId, updatedComment) => API.put(`/posts/${id}/${commentId}`, updatedComment);\r\nexport const deleteComment = (id, commentId) => API.delete(`/posts/${id}/${commentId}`);\r\n\r\nexport const getHashPosts = () => API.get('/hashtag');\r\n\r\nexport const googlelogin =(googleData) => API.post('/users/signIn',googleData);","import {AUTH} from '../constants/actionTypes';\r\nimport * as api from '../api/index.js';\r\n\r\nexport const googlelogin = (googleData, router) => async (dispatch) => {\r\n    try{\r\n        const {data} = await api.googlelogin(googleData);//api호출 여기에서 안넘어가네..\r\n        console.log('데이터출력',data);\r\n        console.log('googlelogin 실행 성공');\r\n        dispatch({type : AUTH, data});\r\n        router.push('/');\r\n    }catch(error){\r\n        console.log(error);\r\n    }\r\n};\r\n\r\n  ","import React, {useState} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport {GoogleLogin} from 'react-google-login';\r\nimport {useDispatch} from 'react-redux';\r\nimport {Paper, Container,Typography } from '@material-ui/core';\r\nimport useStyles from './styles';\r\nimport { googlelogin } from '../../actions/auth';\r\nimport { AUTH } from '../../constants/actionTypes';\r\n\r\nexport const Auth = () => {\r\n    const [isSignup,setIsSignup]= useState(false);\r\n    // {isSignup ? 'Sign Up' : 'Sign In'}\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n\r\n    // const handleSubmit = (e) => {\r\n    //     e.preventDefault();\r\n    // //     dispatch(signin(form, history));\r\n    //   };\r\n\r\n    const googleSuccess =async (res) => {\r\n        //?. 연산자에 액세스 할 수 없는 경우 오류가 발생하지 않게, profileObj가 존재하지 않아도 오류가 발생하지 않아\r\n\r\n        // const result = res?.profileObj;\r\n        // const token = res?.tokenId;\r\n\r\n        const googleData={\r\n            name : res.profileObj.name,\r\n            email : res.profileObj.email,\r\n            provider : 'Google'\r\n        };\r\n\r\n        console.log('구글데이터출력',googleData);\r\n        \r\n        try{\r\n            dispatch(googlelogin(googleData,history));\r\n            // dispatch({type : 'AUTH', data : {result,token}});\r\n            // console.log(res);\r\n            // history.push('/');\r\n        }catch(error){\r\n            console.log(error)\r\n        }\r\n    }\r\n    const googleFailure =(error) => {\r\n        console.log(error);\r\n        console.log('google sign in was unsseccssful.Try again later');\r\n    }\r\n\r\n    \r\n    return (\r\n        <div>\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n            <Paper className={classes.paper} elevation={3}>\r\n            <Typography component=\"h1\" variant=\"h5\"> 로그인 </Typography>\r\n            <form className={classes.form} >\r\n                <GoogleLogin\r\n                    clientId=\"607844855850-f6ob1uhc34ttp1jveo1sbl679vae832l.apps.googleusercontent.com\"\r\n                    buttonText=\"구글로 로그인하기\"\r\n                    // render={(renderProps)=>(\r\n                    //     <Button \r\n                    //         className={classes.googleButton} \r\n                    //         color='primary' \r\n                    //         fullWidth \r\n                    //         onClick={renderProps.onClick} \r\n                    //         disabled={renderProps.disabled} \r\n                    //         startIcon={<Icon/>}\r\n                    //         variant=\"contained\"\r\n                    //         >Google SignIn</Button>\r\n                    // )}\r\n                    onSuccess={googleSuccess}\r\n                    onFailure={googleFailure}\r\n                    cooliePlicy={'single_host_origin'}\r\n                />\r\n            </form>\r\n            </Paper>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\nexport default Auth\r\n","import { FETCH_ALL, GET_POST, CREATE, UPDATE, DELETE, LIKE,HASHTAG } from '../constants/actionTypes';\r\n\r\n\r\nimport * as api from '../api/index.js';\r\n\r\nexport const getPosts = () => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.fetchPosts();\r\n\r\n    dispatch({ type: FETCH_ALL, payload: data });\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n};\r\n\r\nexport const getPost = (id) => async (dispatch) =>{\r\n  try{\r\n    const {data} = await api.getPost(id);\r\n    dispatch({type:GET_POST, payload: data});\r\n  }catch(error){\r\n    console.log(error.message);\r\n  }\r\n}\r\n\r\n//postData는 작성한 정보값들 들어있는거\r\n//Form.js에서 dispatch(createPost(postData))\r\nexport const createPost = (post) => async (dispatch) => {\r\n  try {\r\n    // 백엔드 서버에 post api요청을 보내고 바로 거기에 post를 보냄.\r\n    const { data } = await api.createPost(post);\r\n\r\n    dispatch({ type: CREATE, payload: data });\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n};\r\n\r\nexport const updatePost = (id, post) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.updatePost(id, post);\r\n\r\n    dispatch({ type: UPDATE, payload: data });\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n};\r\n\r\nexport const likePost = (id) => async (dispatch) => {\r\n  \r\n  try{\r\n    const { data } = await api.likePost(id);\r\n\r\n    dispatch({type:LIKE, payload:data})\r\n  }catch(error){\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const deletePost = (id) => async (dispatch) => {\r\n  try {\r\n    // data필요없으니 바로 호출\r\n    await api.deletePost(id);\r\n\r\n    dispatch({type: DELETE , payload: id});\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n};\r\n\r\nexport const getHashPosts = () => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.getHashPosts();\r\n\r\n    dispatch({ type: HASHTAG, payload: data });\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n};\r\n","export default __webpack_public_path__ + \"static/media/1.6b8ef2d2.jpg\";","import React, {useEffect} from 'react';\r\nimport { Card, CardActions, CardContent, CardMedia, Button, Typography } from '@material-ui/core/';\r\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\r\nimport ThumbUpAltOutlined from '@material-ui/icons/ThumbUpAltOutlined';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n// import MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport moment from 'moment';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory} from 'react-router-dom';\r\n\r\nimport './Post.css';\r\n\r\nimport img1 from '../../../img/1.jpg';\r\n\r\n\r\n// import 액션\r\nimport { likePost, deletePost, getPost,getPosts } from '../../../actions/posts';\r\n\r\nconst Post =({post, setCurrentId})=>{\r\n    const dispatch= useDispatch();\r\n    let history =useHistory();\r\n\r\n    const user = JSON.parse(localStorage.getItem('profile'));\r\n    //추가할 것 - 내가 눌렀는지 알수있게\r\n    const Likes = () =>{\r\n        if(post.likes>0 ){\r\n            return <><ThumbUpAltOutlined fontSize=\"small\" />&nbsp;{post.likes} {post.likes === 1 ? 'Like' : 'Likes'}</>\r\n        }\r\n          return <><ThumbUpAltOutlined fontSize=\"small\" />&nbsp;Like</>;\r\n        };\r\n  \r\n    return (\r\n        <div className=\"card\">\r\n          {/* 이미지는 서버에서 받아오기*/}\r\n          {/* 이미지 클릭시 detail페이지로 */}\r\n          <img onClick={()=>{\r\n            setCurrentId(post.id);\r\n            history.push('/detail');\r\n        }}className=\"image\" src={img1} \r\n        title={post.title} />\r\n       \r\n          \r\n          {/* 사용자, 시간 ago 표시 */}\r\n          <div className=\"user-time\">\r\n            {/* post.name 지금 post에 name값이 없잖아 userNick:email */}\r\n            <h6>{post.name}</h6>\r\n            <p>{moment(post.createdAt).fromNow()}</p>\r\n          </div>\r\n          {/* 수정 아이콘 버튼 */}\r\n          {/* 수정아이콘 creator가 currently logged in user 일때만 보여주도록 함. */}\r\n          {/* poetree서버에서 creator:이메일값 보내도록 함 */}\r\n          {(user?.result?.email === post.UserEmail)&& (\r\n            <div className=\"edit\">\r\n                <Button color=\"primary\" size=\"small\" \r\n                  onClick={() => {\r\n                    setCurrentId(post.id);\r\n                    //배열아닌 객체로 전달되어야 수정가능\r\n                    dispatch(getPost(post.id));\r\n                    history.push('/write');}}><EditIcon fontSize=\"default\" />\r\n                </Button>\r\n            </div>\r\n          )}\r\n          {/* 태그 */}\r\n          <div className=\"tag\">\r\n            {/* {post.hashtags.map((tag)=>`#${tag} `)} */}\r\n            <p>{post.hashtags}</p>\r\n          </div>\r\n          {/* 제목 title*/}\r\n          <h2 className=\"title\">{post.title}</h2>\r\n          {/* like, delete 아이콘 버튼 */}\r\n          <CardActions className=\"cardActions\">\r\n            <Button size=\"small\" color=\"primary\" disabled={!user?.result} onClick={() =>\r\n            { dispatch(likePost(post.id)) \r\n              dispatch(getPosts())}}>\r\n                <Likes />\r\n            </Button>\r\n            {(user?.result?.email === post?.UserEmail)&& (\r\n              <Button size=\"small\" color=\"primary\" onClick={() => dispatch(deletePost(post.id))}><DeleteIcon fontSize=\"small\" /> Delete</Button>\r\n              )}\r\n          </CardActions>\r\n          <div className=\"content\">\r\n          <div \r\n              onClick={()=>{\r\n                setCurrentId(post.id);\r\n                history.push('/detail');\r\n            }}className=\"content-inner\">\r\n              {/* 내용 message */}\r\n                <p>{post.content}</p>\r\n          </div>\r\n        </div>\r\n        </div>\r\n      );\r\n};\r\n\r\nexport default Post;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  // mainContainer: {\r\n  //   display: 'flex',\r\n  //   alignItems: 'center',\r\n  // },\r\n  // smMargin: {\r\n  //   margin: theme.spacing(1),\r\n  // },\r\n  // actionDiv: {\r\n  //   textAlign: 'center',\r\n  // },\r\n}));","import React, {useEffect} from 'react';\r\nimport { Grid, CircularProgress } from '@material-ui/core';\r\nimport { useSelector,useDispatch } from 'react-redux';\r\nimport { useHistory} from 'react-router-dom';\r\n\r\nimport Post from '../Post/Post';\r\nimport useStyles from './styles';\r\n\r\nimport Aos from \"aos\"\r\nimport \"aos/dist/aos.css\";\r\n\r\nconst Posts = ({ setCurrentId }) => {\r\n  const posts = useSelector((state) => state.posts);\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  // console.log('posts출력',posts);\r\n\r\n  React.useEffect(() => {\r\n    Aos.init({});\r\n  }, [])\r\n\r\n  return (\r\n    !posts.length ? <CircularProgress /> : (\r\n      <div className=\"row\">\r\n        {posts.map((post) => (\r\n          //하나의 post\r\n          <div className=\"col-md-4\"  data-aos=\"fade-up\" data-aos-duration=\"1000\" style={{margin:'120px 0 60px 0'}}>\r\n            <Post post={post} setCurrentId={setCurrentId} />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Posts;","import React, { useState, useEffect } from 'react';\r\nimport { Container, Grow, Grid } from '@material-ui/core';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { getPosts } from '../../actions/posts';\r\nimport Posts from '../Posts/Posts/Posts.js';\r\n\r\nconst List = ({currentId,setCurrentId}) => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getPosts());\r\n  }, [currentId, dispatch]);\r\n\r\n  return (\r\n    <Grow in>\r\n      <Container maxWidth = \"lg\">\r\n        <Grid container justify=\"space-between\" alignItems=\"stretch\" spacing={3}>\r\n          <Grid item xs={12}>\r\n            <Posts setCurrentId={setCurrentId} />\r\n          </Grid>\r\n          {/* <Grid item xs={12} sm={4}>\r\n            <Form currentId={currentId} setCurrentId={setCurrentId} />\r\n          </Grid> */}\r\n        </Grid>\r\n      </Container>\r\n    </Grow>\r\n  );\r\n};\r\n\r\nexport default List;","import React, {useState, useEffect } from 'react';\r\n\r\nimport { useDispatch,useSelector } from 'react-redux';\r\nimport { useHistory} from 'react-router-dom';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nimport Post from '../Posts/Post/Post.js';\r\nimport Posts from '../Posts/Posts/Posts.js';\r\nimport { getPost, deletePost } from '../../actions/posts';\r\nimport { createComment,updateComment,deleteComment } from '../../actions/comment';\r\n\r\nimport './Detail.css'\r\n\r\nconst Detail = ({currentId, setCurrentId}) => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const user = JSON.parse(localStorage.getItem('profile'));\r\n\r\n  const [commentIn,setCommentIn] = useState('');\r\n\r\n  const data = { comment: commentIn};\r\n  \r\n  const [commentId,setCommentId] = useState();\r\n\r\n  // 각 게시물 불러오기\r\n  useEffect(() => {\r\n    dispatch(getPost(currentId));\r\n  }, [dispatch]);\r\n\r\n  const post = useSelector((state) => state.posts);\r\n  console.log('Detail, post출력',post);\r\n\r\n  const comments = useSelector((state)=>state.comments);\r\n  console.log('comments출력 ', comments)\r\n\r\n  const clickEdit=(e)=>{\r\n    setCurrentId(post.id);\r\n    console.log(currentId);\r\n    history.push('/write');\r\n    // clear();\r\n    //다시 시작성할때 currentId값 저장되지 않도록 하기 위해서\r\n  }\r\n  // const clear=()=>{\r\n    //   setCurrentId(null);\r\n    // }\r\n    \r\n    // 댓글작성 확인버튼 눌렀을 때\r\n    const commentBtn=(e)=>{\r\n      e.preventDefault();\r\n    \r\n      if(user&&commentId){\r\n        dispatch(updateComment(post.id,commentId,data))\r\n        clear()\r\n      }else if(user&&!commentId){\r\n        dispatch(createComment(post.id, data))\r\n        clear()\r\n      }else{\r\n        alert('로그인이 필요한 서비스입니다.')\r\n        history.push('/login')\r\n      }\r\n      //댓글 확인눌렀을 때 바로 댓글 표시되도록 하기 위해\r\n      dispatch(getPost(currentId))\r\n    \r\n    }\r\n\r\n    const clear=()=>{\r\n      setCommentId(null);\r\n      setCommentIn('');\r\n  }\r\n\r\n   \r\n  return (\r\n    <div>\r\n      <div className=\"publish\">\r\n          <div className=\"write\">\r\n              <h3 className=\"title-input\">{post.title}</h3>\r\n              <p className=\"author\">{post.name}</p>\r\n              <p className=\"content-input\" >{post.content}</p>\r\n              <p className=\"hashtags\">{post.hashtags}</p>\r\n          </div>\r\n          <img src='http://t1.daumcdn.net/friends/prod/editor/dc8b3d02-a15a-4afa-a88b-989cf2a50476.jpg'/>\r\n      </div>\r\n      {(user?.result?.email === post.UserEmail)&&(\r\n        <div>\r\n          <Button style={{margin:'16px'}} variant=\"outline-secondary\" \r\n            onClick={clickEdit}>수정하기</Button>\r\n          <Button style={{margin:'16px'}} variant=\"outline-secondary\" \r\n            onClick={()=>{\r\n            dispatch(deletePost(post.id))\r\n            alert('삭제되었습니다.');\r\n            history.push('list')\r\n          }}>삭제하기</Button>\r\n        </div>\r\n      )}\r\n\r\n    {/* 댓글 comments */}\r\n      <h4 className=\"comment_title\">댓글</h4>\r\n      {/* 댓글 작성ui */}\r\n      <Comment commentId={commentId} user={user} commentIn={commentIn} setCommentIn={setCommentIn} commentBtn={commentBtn}></Comment> \r\n      \r\n        {console.log('commentIn입력:',commentIn)}\r\n\r\n      {/* 댓글 수정, 삭제 ui */}\r\n      <div className=\"comments\">\r\n          {\r\n            comments?.map((comment)=>\r\n              (\r\n                <div className=\"comment_boxs\">\r\n                {/* commentId와 게시물 id가 맞는 게시물만 수정으로 바뀌도록 */}\r\n                {commentId===comment?.id ? \r\n                  <Comment commentId={commentId} user={user} commentIn={commentIn} setCommentIn={setCommentIn} commentBtn={commentBtn}></Comment> \r\n                  : <CommentList user={user} comment={comment}></CommentList>}\r\n          \r\n                  {(user?.result.email === comment?.commenter) && (\r\n                <div className=\"edit_delete\">\r\n                  <p onClick={()=>{\r\n                    setCommentId(comment?.id)\r\n                    setCommentIn(comment?.comment)                    \r\n                  }}>수정</p>\r\n                  <p onClick={()=>{dispatch(deleteComment(post.id, comment?.id))}}>삭제</p>\r\n                </div>\r\n                  )}\r\n              </div>\r\n              )\r\n            )\r\n          }\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n//댓글작성창(작성/수정할 때)\r\nfunction Comment({commentId,user,commentIn,setCommentIn,commentBtn}){\r\n  return(\r\n    <div>\r\n      {console.log('업데이트commentId출력:',commentId)}\r\n      <div className=\"comment_box\">\r\n            <img src={user?.result.name.charAt(0)} style={{width:'42px' ,height:'42px'}}/>\r\n            <textarea className=\"comment_write\" \r\n              placeholder=\"댓글을 작성해주세요.\"\r\n              value={commentIn}\r\n              onChange={(e)=>setCommentIn(e.target.value)}\r\n            ></textarea>\r\n      </div>\r\n            <Button variant=\"outline-secondary\"\r\n              onClick={commentBtn}>확인</Button>\r\n    </div>\r\n  )\r\n}\r\n\r\n//각 댓글 리스트들(수정하지 않을때)\r\nfunction CommentList({user,comment}){\r\n  return(\r\n    <div className=\"comment_boxss\">\r\n        <img src={user?.result.name.charAt(0)} style={{width:'42px' ,height:'42px'}}/>\r\n        <div className=\"comment_item\">\r\n        <p className=\"comment_userName\">{comment?.commenterName}</p>\r\n        <p className=\"comment\">{comment?.comment}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default Detail;","import { COMMENT, COM_UPDATE, COM_DELETE } from '../constants/actionTypes';\r\n\r\nimport * as api from '../api/index.js';\r\n\r\n//댓글\r\nexport const createComment = (id, comment) => async (dispatch)=>{\r\n    try{\r\n        const {data} = await api.createComment(id, comment);\r\n        dispatch({type: COMMENT, payload: data});\r\n    }catch(error){\r\n        console.log(error.message);\r\n    }\r\n  }\r\n  \r\n  export const updateComment = (id, commentId, comment) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.updateComment(id, commentId, comment);\r\n    \r\n        dispatch({ type: COM_UPDATE, payload: data });\r\n      } catch (error) {\r\n        console.log(error.message);\r\n      }\r\n  };\r\n  \r\n  export const deleteComment = (id, commentId) => async (dispatch) => {\r\n    try {\r\n      await api.deleteComment(id, commentId);\r\n  \r\n      dispatch({type: COM_DELETE , payload: commentId});\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };","export default __webpack_public_path__ + \"static/media/b.af36509c.jpg\";","export default __webpack_public_path__ + \"static/media/bada.85542694.png\";","export default __webpack_public_path__ + \"static/media/pen.e409e013.png\";","export default __webpack_public_path__ + \"static/media/2.0373a2b2.jpg\";","export default __webpack_public_path__ + \"static/media/3.c77ac262.jpg\";","export default __webpack_public_path__ + \"static/media/note1.d97152f2.jpg\";","//강의에서 로그인 폼 & 게시물 작성 폼.\r\nimport React, { useState, useEffect } from 'react';\r\nimport { TextField, Button, Typography, TextareaAutosize } from '@material-ui/core';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { createPost, updatePost } from '../../actions/posts';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { getPosts } from '../../actions/posts';\r\n\r\nimport note from '../../img/note1.jpg'\r\nimport './Form.css'\r\nimport img1 from '../../img/1.jpg'\r\n\r\nimport Aos from \"aos\"\r\nimport \"aos/dist/aos.css\";\r\n\r\nconst Form = ({ currentId, setCurrentId }) => {\r\n\r\n    React.useEffect(() => {\r\n        Aos.init({});\r\n      }, [])\r\n      \r\n    const dispatch = useDispatch();\r\n    const [postData, setPostData] = useState({\r\n        title: '', content: '', hashtags: ''\r\n    });\r\n    //이미지는 서버에서 가져와야 \r\n    let [img, setImage] = useState();\r\n\r\n    // 수정할때, currentId 게시물posts 가져오기 위해 redux 이용\r\n    // 전체게시물(getPosts)에서 보여질때 수정방법\r\n    // const post = useSelector((state) => (currentId ? state.posts.find((p) => p.id === currentId) : null));\r\n\r\n    // 각게시물(getPost)에서 보여질때 수정방법\r\n    const post = useSelector((state) => state.posts);\r\n    console.log('currentId값', currentId);\r\n    const user = JSON.parse(localStorage.getItem('profile'));\r\n    const history = useHistory();\r\n\r\n    // post(id 게시물)가 나타나거나 변할때 실행\r\n    // 수정버튼 클릭시 currentId게시물 가져오기\r\n    useEffect(() => {\r\n        if (post) setPostData(post);\r\n    }, [post])\r\n\r\n    // 제출버튼을 클릭하면 요청하는 함수\r\n    const handleSubmit = (e) => {\r\n        // 브라우저에서 새로고침 방지\r\n        e.preventDefault();\r\n\r\n        // currenId가 존재하면 updatePost\r\n        if (currentId) {\r\n            dispatch(updatePost(currentId, { ...postData, email: user?.result?.email }));\r\n        } else {\r\n            // 사용자가 입력 한 모든 데이터와 함께 게시 요청 보내\r\n            //postData(모든 데이터)를 전달 & 어떤 user인지도 함께\r\n            dispatch(createPost({ ...postData, email: user?.result?.email }));\r\n            // 액션이 전달되면 바로 리듀서로 이동\r\n        }\r\n        clear();\r\n        history.push('/list');\r\n    };\r\n\r\n    // if(!user?.result?.name) {\r\n    //     return alert('로그인이 필요합니다.');\r\n    // }\r\n    if (!user?.result?.name) {\r\n        return (\r\n            <h5 style={{marginTop:'100px'}}>\r\n                시 작성을 하려면 로그인이 필요합니다.\r\n            </h5>\r\n        );\r\n    }\r\n\r\n\r\n    const clear = () => {\r\n        setCurrentId(null);\r\n        setPostData({ title: '', content: '', hashtags: '' });\r\n    }\r\n    return (\r\n        <div \r\n             data-aos=\"zoom-in\">\r\n            <img className=\"note\" src={note} />\r\n            <form className=\"form\" onSubmit={handleSubmit}>\r\n                <div className=\"post-img\">\r\n                    <img src={img1} />\r\n\r\n                </div>\r\n                <div className=\"post\">\r\n                    <h3>{currentId ? '시 수정하기' : '시 작성하기'}</h3>\r\n                    <div className=\"post-write\">\r\n                        <TextField\r\n                            className=\"title\"\r\n                            label=\"제목\"\r\n                            variant=\"outlined\"\r\n                            name=\"Title\"\r\n\r\n                            value={postData.title}\r\n                            onChange={(e) => setPostData({ ...postData, title: e.target.value })}\r\n                        />\r\n                        <textarea\r\n                            className=\"content_\"\r\n                            placeholder=\"시 내용\"\r\n                            variant=\"outlined\"\r\n                            name=\"content\"\r\n\r\n                            value={postData.content}\r\n                            onChange={(e) => setPostData({ ...postData, content: e.target.value })}\r\n\r\n                        />\r\n                        <TextField\r\n                            className=\"hashtags\"\r\n                            label=\"해시태그 (#을 붙여주세요)\"\r\n                            variant=\"outlined\"\r\n                            name=\"hashtags\"\r\n\r\n                            value={postData.hashtags}\r\n                            // hashtag split 기준으로 나누기\r\n                            onChange={(e) => setPostData({ ...postData, hashtags: e.target.value })}\r\n                        />\r\n                    </div>\r\n                    <div className=\"btns\">\r\n                        <Button variant=\"outlined\" size=\"small\" onClick={clear} fullWidth>지우기</Button>\r\n                        <Button className=\"submit\" variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>확인</Button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n\r\n        </div>\r\n    );\r\n}\r\nexport default Form","import styled from 'styled-components'\r\nimport {Link as LinkR} from 'react-router-dom'\r\nimport {Link as LinkS} from 'react-scroll'\r\n\r\nexport const Nav = styled.nav`\r\n    background: none;\r\n    height: 80px;\r\n    margin-top: -80px;\r\n    display:flex;\r\n    justify-content: center;\r\n    align-items:center;\r\n    font-size: 1rem;\r\n    position: sticky;\r\n    top:0;\r\n    z-index:10;\r\n\r\n    @media screen and (max-width: 960px){\r\n        transition: 0.8s all ease;\r\n    }\r\n`\r\n\r\nexport const NavbarContainer = styled.div`\r\n    display:flex;\r\n    justify-content:space-between;\r\n    height: 80px;\r\n    z-index:1;\r\n    width: 100%;\r\n    padding: 0 24px;\r\n    max-width: 1500px;\r\n`\r\nexport const Logo = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`\r\n\r\nexport const NavLogo = styled(LinkR)`\r\n    color: #000;\r\n    justify-self: flex-start;\r\n    cursor:pointer;\r\n    font-size:1.5rem;\r\n    display: flex;\r\n    align-items: center;\r\n    margin-left:24px;\r\n    text-decoration:none;\r\n`\r\n\r\nexport const MobileIcon = styled.div`\r\n    display:none;\r\n    @media screen and (max-width: 768px){\r\n        display:block;\r\n        position:absolute;\r\n        top:0;\r\n        right:0;\r\n        transform: translate(-100%,60%);\r\n        font-size:1.8rem;\r\n        cursor:pointer;\r\n        color:#000;\r\n    }\r\n`\r\n\r\nexport const NavMenu = styled.ul`\r\n    display:flex;\r\n    align-items: center;\r\n    list-style: none;\r\n    text-align: center;\r\n    // margin-right: 700px;\r\n    font-family: Noto Sans KR;\r\n    font-size: 18px;\r\n\r\n    @media screen and (max-width: 768px){\r\n        display: none;\r\n    }\r\n`\r\n\r\nexport const NavItem = styled.li`\r\n    height: 80px;\r\n`\r\n\r\nexport const NavLinks = styled(LinkR)`\r\n    color: #000;\r\n    display: flex;\r\n    align-items: center;\r\n    text-decoration: none;\r\n    padding: 0 1rem;\r\n    height : 100%;\r\n    cursor: pointer;\r\n\r\n    &.active {\r\n        // 해당 링크로 이동시 밑줄 표시\r\n        border-bottom: 3px solid #01bf71;\r\n\r\n    }\r\n`\r\nexport const NavBtn = styled.nav`\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    @media screen and (max-width: 768px){\r\n        display: none;\r\n    }\r\n`\r\n\r\nexport const NavBtnLink = styled(LinkR)`\r\n    margin: 0 10px;\r\n    border: 1px solid lightgrey;\r\n    border-radius: 50px;\r\n    background: #fff;\r\n    white-space: nowrap;\r\n    padding: 10px 22px;\r\n    color: #010606;\r\n    font-size: 16px;\r\n    cursor: pointer;\r\n    transition: all 0.2s ease-in-out;\r\n    text-decoration: none;\r\n    opacity: 85%;\r\n\r\n    &:hover{\r\n        transition: all 0.2s ease-in-out;\r\n        background: #000;\r\n        color: #fff;\r\n    }\r\n`\r\n\r\n","export default __webpack_public_path__ + \"static/media/favicon.fc4a97b8.png\";","import React, { useState, useEffect } from 'react';\r\n\r\nimport {FaBars} from 'react-icons/fa'\r\nimport {Nav, NavbarContainer, Logo, NavLogo, MobileIcon, NavMenu, NavItem, NavLinks\r\n, NavBtn, NavBtnLink} from './NavbarElement';\r\n\r\nimport { Link, useHistory, useLocation } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport decode from 'jwt-decode';\r\n\r\nimport poetreeLogo from '../../img/favicon.png';\r\nimport * as actionType from '../../constants/actionTypes';\r\nconst Navbar = ({toggle}) => {\r\n    const dispatch = useDispatch();\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n\r\n    const [user,setUser] = useState(JSON.parse(localStorage.getItem('profile')));\r\n    \r\n    \r\n    useEffect(() => {\r\n        const token = user?.token;\r\n        \r\n        if (token) {\r\n        const decodedToken = decode(token);\r\n\r\n        if (decodedToken.exp * 1000 < new Date().getTime()) logout();\r\n        }\r\n\r\n        setUser(JSON.parse(localStorage.getItem('profile')));\r\n    }, [location]);\r\n\r\n    const logout = () => {\r\n        dispatch({ type: actionType.LOGOUT });\r\n\r\n        history.push('/login');\r\n\r\n        setUser(null);\r\n    };\r\n    return(\r\n        <>\r\n           <Nav>\r\n               <NavbarContainer>\r\n                   <Logo>\r\n                       <img src={poetreeLogo} alt=\"icon\" height=\"48\" />\r\n                       <NavLogo to='/' style={{color:'#3e3e3e', fontFamily:'Satisfy', fontSize:'28px'}} >poetree</NavLogo>\r\n                   </Logo>\r\n                   <MobileIcon onClick={toggle}>\r\n                       <FaBars />\r\n                   </MobileIcon>\r\n                   <NavMenu>\r\n                       <NavItem>\r\n                           <NavLinks to=\"about\">소개</NavLinks>\r\n                       </NavItem>\r\n                       <NavItem>\r\n                           <NavLinks to=\"/list\">둘러보기</NavLinks>\r\n                       </NavItem>\r\n                   </NavMenu>\r\n                   <NavBtn>\r\n                   {user?.result ? (\r\n                        <NavBtnLink onClick={logout}>로그아웃</NavBtnLink>\r\n                    ) : (\r\n                       <NavBtnLink to=\"/login\">로그인</NavBtnLink>\r\n                    )}\r\n                    {user?.result.role === 'admin' ? (\r\n                        <NavBtnLink to=\"/admin\">admin</NavBtnLink>\r\n                    ) : (\r\n                       <></>\r\n                    )}\r\n                   </NavBtn>\r\n               </NavbarContainer>\r\n           </Nav>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Navbar;","import styled from 'styled-components'\r\nimport {Link as LinkS } from 'react-scroll'\r\nimport {Link as LinkR} from 'react-router-dom'\r\nimport {FaTimes} from 'react-icons/fa'\r\n\r\nexport const SidebarContainer = styled.aside`\r\n    position: fixed;\r\n    z-index: 999;\r\n    width: 100%;\r\n    height: 100%;\r\n    background : #0d0d0d;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    top: 0;\r\n    left: 0;\r\n    transition: 0.3s ease-in-out;\r\n    opacity: ${({isOpen}) =>(isOpen ? '100%' : '0')};\r\n    top: ${({isOpen})=>(isOpen ? '0' : '-100%')};\r\n`\r\nexport const Icon = styled.div`\r\n    position: absolute;\r\n    top: 1.2rem;\r\n    right: 1.5rem;\r\n    background: transparent;\r\n    font-size: 2rem;\r\n    cursor: pointer;\r\n    outline: none;\r\n`\r\n\r\nexport const CloseIcon = styled(FaTimes)`\r\n    color: #fff;\r\n`\r\n\r\nexport const SidebarWrapper = styled.div`\r\n    color: #fff;\r\n`\r\nexport const SidebarMenu = styled.ul`\r\n    display: grid;\r\n    grid-template-colums: 1fr;\r\n    grid-template-rows: repeat(6,80px);\r\n    text-align: center;\r\n\r\n    @media screen and (max-width: 480px){\r\n        grid-template-rows: repeat(6,60px);\r\n    }\r\n`\r\n\r\nexport const SidebarLink = styled(LinkS)`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-size: 1.5rem;\r\n    text-decoration: none;\r\n    list-style: none;\r\n    transition: 0.2s ease-in-out;\r\n    text-decoration: none;\r\n    color: #fff;\r\n    cursor: pointer;\r\n\r\n    &:hover{\r\n        color: #01bf71;\r\n        transition: 0.2s ease-in-out;\r\n    }\r\n`\r\n\r\nexport const SideBtnWrap = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n`\r\n\r\nexport const SidebarRoute = styled(LinkR)`\r\n    border-radius: 50px;\r\n    background: #f7f5f1;\r\n    white-space: nowrap;\r\n    padding: 16px 64px;\r\n    color: #010606;\r\n    font-size: 16px;\r\n    outline: none;\r\n    border: none;\r\n    cursor: pointer;\r\n    transition: all 0.2s ease-in-out;\r\n    text-decoration: none;\r\n\r\n    &:hover{\r\n        transition: all 0.2s ease-in-out;\r\n        background : #3e3e3e;\r\n        color: #fff;\r\n    }\r\n`","import React, {useState,useEffect} from 'react'\r\nimport {SidebarContainer, Icon, CloseIcon,\r\nSidebarWrapper, SidebarMenu, SidebarLink, SideBtnWrap, SidebarRoute} from './SidebarElements';\r\n\r\nimport { Link, useHistory, useLocation } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport decode from 'jwt-decode';\r\nimport * as actionType from '../../constants/actionTypes';\r\n\r\nconst Sidebar = ({isOpen, toggle}) => {\r\n    const dispatch = useDispatch();\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n\r\n    const [user,setUser] = useState(JSON.parse(localStorage.getItem('profile')));\r\n    \r\n    \r\n    useEffect(() => {\r\n        const token = user?.token;\r\n        \r\n        if (token) {\r\n        const decodedToken = decode(token);\r\n\r\n        if (decodedToken.exp * 1000 < new Date().getTime()) logout();\r\n        }\r\n\r\n        setUser(JSON.parse(localStorage.getItem('profile')));\r\n    }, [location]);\r\n\r\n    const logout = () => {\r\n        dispatch({ type: actionType.LOGOUT });\r\n\r\n        history.push('/login');\r\n\r\n        setUser(null);\r\n    };\r\n\r\n    return(\r\n        <SidebarContainer isOpen={isOpen} onClick={toggle}>\r\n            {console.log(isOpen)}\r\n            <Icon onClick={toggle}>\r\n                <CloseIcon />\r\n            </Icon>\r\n            <SidebarWrapper>\r\n                <SidebarMenu>\r\n                    <SidebarLink to=\"/about\" onClick={toggle}>\r\n                        소개\r\n                    </SidebarLink>\r\n                    <SidebarLink to=\"/list\" onClick={toggle}>\r\n                        둘러보기\r\n                    </SidebarLink>\r\n                </SidebarMenu>\r\n                <SideBtnWrap>\r\n                    {user?.result ? (\r\n                        <SidebarRoute onClick={logout}>로그아웃</SidebarRoute>\r\n\r\n                    ) : (\r\n                        <SidebarRoute to=\"/login\">로그인</SidebarRoute>\r\n                    )}\r\n                </SideBtnWrap>\r\n            </SidebarWrapper>\r\n        </SidebarContainer>\r\n    )\r\n}\r\nexport default Sidebar;","export default __webpack_public_path__ + \"static/media/6.8403ac18.jpg\";","export default __webpack_public_path__ + \"static/media/5.cbeea227.jpg\";","export default __webpack_public_path__ + \"static/media/9.defdbcc5.jpg\";","export default __webpack_public_path__ + \"static/media/7.08f5a3ef.jpg\";","export default __webpack_public_path__ + \"static/media/8.36e92c8c.jpg\";","export default __webpack_public_path__ + \"static/media/10.83f2ecbc.jpg\";","import React, {useEffect, useState,useRef} from 'react';\r\nimport { useHistory ,useLocation } from 'react-router-dom';\r\nimport {useDispatch,useSelector} from 'react-redux';\r\n\r\n\r\nimport '../../App.css';\r\nimport './Home.css';\r\n\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\n\r\nimport imgA from '../../img/bada.png';\r\nimport imgB from '../../img/b.jpg';\r\nimport imgPen from '../../img/pen.png';\r\nimport img1 from '../../img/1.jpg';\r\nimport img2 from '../../img/2.jpg';\r\nimport img3 from '../../img/3.jpg';\r\nimport img4 from '../../img/4.jpg';\r\nimport img5 from '../../img/5.jpg';\r\nimport img6 from '../../img/6.jpg';\r\nimport img7 from '../../img/7.jpg';\r\nimport img8 from '../../img/8.jpg';\r\nimport img9 from '../../img/9.jpg';\r\nimport img10 from '../../img/10.jpg';\r\nimport bg from '../../img/bgbg.png';\r\n\r\nimport video1 from '../../video/video1.mp4';\r\nimport video2 from '../../video/video2.mp4';\r\nimport video3 from '../../video/video3.mp4';\r\nimport video4 from '../../video/video4.mp4';\r\n\r\n\r\nimport {getPosts} from '../../actions/posts';\r\n\r\nimport Aos from \"aos\"\r\nimport \"aos/dist/aos.css\";\r\n\r\nconst Home= ({currentId}) =>{\r\n\r\n  React.useEffect(() => {\r\n    Aos.init({});\r\n  }, [])\r\n\r\n  let today = new Date();\r\n  let month = today.getMonth() + 1;  // 월\r\n  let date = today.getDate();  // 날짜\r\n\r\n  if(month<10){\r\n    month= '0'+month\r\n  }\r\n  if(date<10){\r\n    date='0'+date\r\n  }\r\n  \r\n\r\n  const [currentSlide, setCurrentSlide] = useState(0);\r\n  // const slideRef = useRef(null);\r\n\r\n  const user = JSON.parse(localStorage.getItem('profile'));\r\n  \r\n  const images = [img10, img9, img6];\r\n  const length = images.length;\r\n\r\n// useEffect(() => {\r\n//   slideRef.current.style.transition = \"all 0.5s ease-in-out\";\r\n//   slideRef.current.style.transform = `translateX(-${currentSlide*33}%)`; \r\n// }, [currentSlide]);\r\n  \r\n    let history =useHistory();\r\n    const dispatch = useDispatch();\r\n    // const img = useRef();\r\n\r\n    const posts = useSelector((state) => state.posts);\r\n\r\n    useEffect(() => {\r\n        dispatch(getPosts());\r\n      }, [currentId, dispatch]);\r\n      //currentId와 dispatch가 실행/변경 될때마다 실행\r\n    \r\n      const nextSlide = () => {\r\n        setCurrentSlide(currentSlide ===length-1 ? 0 : currentSlide+1);\r\n      }\r\n\r\n      const prevSlide = () => {\r\n        setCurrentSlide(currentSlide === 0 ? length-1 : currentSlide-1);\r\n      }\r\n\r\n      if(!Array.isArray(images) || images.length <=0){\r\n        return null;\r\n      }\r\n    return(\r\n        <div style={{overflow:'hidden'}}>\r\n          <section className=\"bgContainer\">\r\n          <div className=\"background\">\r\n            {/* <video autoPlay loop muted src={video3} type='video/mp4' /> */}\r\n            <div className=\"bgContent\">\r\n              <div className=\"bg-text\">\r\n                <h1>Plant your<br/> Poetree</h1>\r\n                <div data-aos=\"fade-up\" data-aos-duration=\"3000\" className=\"line\"></div>\r\n                <div data-aos=\"fade-up\" data-aos-duration=\"3000\" className=\"circle\"></div>\r\n                <h3 data-aos=\"fade-up\" data-aos-duration=\"3000\" className=\"date\">{month}.{date}</h3>\r\n                {/* <h2>나만의 시가 펼쳐지는 공간, <br/>poetree</h2> */}\r\n                <p>자신의 시집을 만들어 함께 공유하며 나눠보세요.<br/>\r\n                  사진 속 오늘의 기분을 시로 작성해보세요.<br/>\r\n                  그리고 다시 꺼내 보세요. <br/>서랍 속 간직한 글과 감성을.<br/>\r\n                  </p>\r\n                <div className=\"button\" onClick={()=>{history.push('/write')}}>시 작성하기</div>   \r\n              </div>\r\n              <div className=\"img-box\">\r\n              <section data-aos=\"fade-left\" data-aos-duration=\"3000\" className=\"img-slide\" >\r\n                <ArrowBackIosIcon className=\"left-arrow\" onClick={prevSlide}/>\r\n                <ArrowForwardIosIcon className=\"right-arrow\" onClick={nextSlide}/>\r\n                {images.map((img,i)=> {\r\n                  return(\r\n                    <div className={i ===currentSlide ? 'slide active' : 'slide'} key={i}>\r\n                      {i === currentSlide && (\r\n                        <img src={img} key={i} />\r\n                      )}\r\n                    </div>\r\n                  )\r\n                })}\r\n                <p className=\"a\">Today's Photo</p>\r\n                <p className=\"sub\">───  poetree  ───</p>\r\n                <div className=\"img-text\">\r\n                  <p className=\"img-text1\">PICK</p>\r\n                  <p className=\"img-text2\">What you want</p>\r\n                  <p className=\"img-text3\">AUTHOR</p>\r\n                  <p className=\"img-text4\">{user?.result.name}</p>\r\n                </div>\r\n              </section>\r\n              </div>\r\n              </div>\r\n          </div>\r\n          </section>\r\n\r\n          <section className=\"keywords\" \r\n            data-aos=\"fade-up\"\r\n            data-aos-delay=\"50\"\r\n            data-aos-duration=\"1000\"\r\n            data-aos-easing=\"ease-in-out\">\r\n            <h2>Keywords</h2>\r\n            <p>#키워드를 통해 더 다양한 시들을 살펴보세요.</p>\r\n            <div className=\"keywords-list\">\r\n              \r\n              <a className=\"keyword-item\" href=\"\" style={{top:'0', left:'0'}} ><div className=\"text\">#사진</div></a>\r\n              <a className=\"keyword-item\" href=\"\" style={{top:'0', left:'200px'}} ><div className=\"text\">#사진</div></a>\r\n              <a className=\"keyword-item\" href=\"\" style={{top:'0', left:'400px'}} ><div className=\"text\">#사진</div></a>\r\n              <a className=\"keyword-item\" href=\"\" style={{top:'0', left:'600px'}} ><div className=\"text\">#사진</div></a>\r\n              <a className=\"keyword-item\" href=\"\" style={{top:'0', left:'800px'}} ><div className=\"text\">#사진</div></a>\r\n\r\n              <a className=\"keyword-item\" href=\"\" style={{top:'200px', left:'0'}} ><div className=\"text\">#사진</div></a>\r\n              <a className=\"keyword-item\" href=\"\" style={{top:'200px', left:'200px'}} ><div className=\"text\">#사진</div></a>\r\n              <a className=\"keyword-item\" href=\"\" style={{top:'200px', left:'400px'}} ><div className=\"text\">#사진</div></a>\r\n              <a className=\"keyword-item\" href=\"\" style={{top:'200px', left:'600px'}} ><div className=\"text\">#사진</div></a>\r\n              <a className=\"keyword-item\" href=\"\" style={{top:'200px', left:'800px'}} ><div className=\"text\">#사진</div></a>\r\n            </div>\r\n          </section>\r\n          \r\n      </div>\r\n      );\r\n}\r\n  \r\n  export default Home;","export default __webpack_public_path__ + \"static/media/bgbg.f10053a0.png\";","export default __webpack_public_path__ + \"static/media/video1.aa6c271e.mp4\";","export default __webpack_public_path__ + \"static/media/video2.0f438973.mp4\";","export default __webpack_public_path__ + \"static/media/video3.d62554bd.mp4\";","export default __webpack_public_path__ + \"static/media/video4.181711a7.mp4\";","import React, {useEffect, useState,useRef} from 'react';\r\nimport { useHistory ,useLocation } from 'react-router-dom';\r\nimport { Button,Jumbotron } from 'react-bootstrap';\r\nimport {useDispatch,useSelector} from 'react-redux';\r\n\r\nimport imgA from '../../img/bada.png';\r\nimport imgB from '../../img/b.jpg';\r\nimport imgPen from '../../img/pen.png';\r\nimport img1 from '../../img/1.jpg';\r\nimport img2 from '../../img/2.jpg';\r\nimport img3 from '../../img/3.jpg';\r\nimport img4 from '../../img/4.jpg';\r\nimport img5 from '../../img/5.jpg';\r\nimport img6 from '../../img/6.jpg';\r\nimport img7 from '../../img/7.jpg';\r\nimport img8 from '../../img/8.jpg';\r\nimport img9 from '../../img/9.jpg';\r\nimport img10 from '../../img/10.jpg';\r\n\r\n\r\nimport {getPosts} from '../../actions/posts';\r\n\r\n\r\nconst About= ({currentId}) =>{\r\n    let history =useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    const posts = useSelector((state) => state.posts);\r\n    return(\r\n        <div>\r\n        <div className=\"container\">\r\n        <div className=\"row\" style={{marginTop:'150px'}}>  \r\n          <img className=\"col-md-7\" src={imgB}></img>\r\n          <div className=\"col-md-5\" style={{padding:'150px 0 0 50px', textAlign:'left'}}>\r\n            <h2 style={{marginBottom:'36px'}}>about</h2>\r\n            <p style={{fontFamily:'Nanum Myeongjo'}}>사진 속 오늘의 기분을 시로 작성해보세요.<br></br>\r\n              그리고 다시 꺼내 보세요. 서랍 속 간직한 글과 감성을.<br></br>\r\n              자신의 시집을 만들어 함께 공유하며 나눠보세요.</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"main-banner row\" >\r\n      <img style={{ width: '100px'} } src={imgPen}></img>\r\n      <p>더 간편한 이용을 위해 포에트리 앱을 이용해 보세요. <br></br>\r\n더 간편한 이용을 위해 포에트리 앱을 이용해 보세요. <br></br>\r\n더 간편한 이용을 위해 포에트리 앱을 이용해 보세요. </p>\r\n        <Button variant=\"outline-secondary\">바로가기</Button>\r\n        </div>\r\n\r\n      <div className=\"container\">\r\n        <div className=\"row\" style={{marginTop:'130px'}}>\r\n          <div className=\"col-md-7\"style={{marginTop:'100px' , fontFamily: 'Nanum Myeongjo'}}>\r\n            <h4 style={{marginBottom:'60px' }}>흔들리며 피는 꽃</h4>\r\n            <p style={{textAlign:'right' , padding:'20px 50px'}}>도종환</p>\r\n            <p>흔들리지 않고 피는 꽃이 어디 있으랴<br></br>\r\n              이 세상 그 어떤 아름다운 꽃들도<br></br>\r\n              다 흔들리면서 피었나니<br></br>\r\n              흔들리면서 줄기를 곧게 세웠나니<br></br>\r\n              흔들리지 않고 가는 사람이 어디 있으랴<br></br>\r\n              <br></br>\r\n              젖지않고 피는 꽃이 어디 있으랴<br></br>\r\n              이 세상 그 어떤 빛나는 꽃들도<br></br>\r\n              다 젖으며 젖으며 피었나니<br></br>\r\n              바람과 비에 젖으며 꽃잎 따뜻하게 피웠나니<br></br>\r\n              젖지 않고 가는 삶이 어디 있으랴</p>\r\n          </div>\r\n          <img className=\"col-md-4\" src={img1}></img>\r\n        </div>\r\n      </div>\r\n      </div>\r\n\r\n    );\r\n}\r\nexport default About;","import React, {useState} from 'react'\r\nimport axios from 'axios'\r\n\r\nconst Admin = () => {\r\n    const [img,setImg] = useState(0);\r\n    const onChange = (e) => {\r\n        setImg(e.target.files[0]);\r\n    }\r\n    const onClick = async () => {\r\n        const formData = new FormData();\r\n        formData.append('file', img);\r\n        const res = await axios.post(\"/주소\", formData);\r\n        console.log(res);\r\n      }\r\n    return(\r\n        <div className=\"admin\" style={{marginTop:'100px'}}>\r\n            <input type=\"file\" onChange={onChange}/>\r\n            <button onClick={onClick}>제출</button>\r\n        </div>\r\n    )\r\n}\r\nexport default Admin;","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n    toTop: {\r\n        zIndex: 2,\r\n        position: 'fixed',\r\n        bottom: '10vh',\r\n        backgroundColor: '#DCDCDC',\r\n        color: 'black',\r\n        \"&:hover, &.Mui-focusVisible\": {\r\n            transition: '0.3s',\r\n            color: '#397BA6',\r\n            backgroundColor: '#DCDCDC'\r\n        },\r\n        [theme.breakpoints.up('xs')]: {\r\n            right: '5%',\r\n            backgroundColor: 'rgb(220,220,220,0.7)',\r\n        },\r\n        [theme.breakpoints.up('lg')]: {\r\n            right: '6.5%',\r\n        },\r\n    }\r\n})\r\n)","import React, { useState, useEffect } from 'react'\r\n\r\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport useStyles from './styles';\r\n\r\nconst Scroll = ({\r\n    showBelow,\r\n}) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [show, setShow] = useState(showBelow ? false : true)\r\n\r\n    const handleScroll = () => {\r\n        if (window.pageYOffset > showBelow) {\r\n            if (!show) setShow(true)\r\n        } else {\r\n            if (show) setShow(false)\r\n        }\r\n    }\r\n\r\n    const handleClick = () => {\r\n        window[`scrollTo`]({ top: 0, behavior: `smooth` })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (showBelow) {\r\n            window.addEventListener(`scroll`, handleScroll)\r\n            return () => window.removeEventListener(`scroll`, handleScroll)\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            {show &&\r\n                <IconButton onClick={handleClick} className={classes.toTop} aria-label=\"to top\" component=\"span\">\r\n                    <ExpandLessIcon />\r\n                </IconButton>\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default Scroll","import React, {useEffect, useState} from 'react';\nimport { useHistory ,useParams } from 'react-router-dom';\nimport './App.css';\nimport { Link, Route, Switch } from 'react-router-dom';\n\n// redux를 위한 import\nimport {useDispatch,useSelector} from 'react-redux';\n\nimport Mypage from './Mypage.js'\nimport Search from './Search.js'\nimport Auth from './components/Auth/Auth.js'\nimport List from './components/List/List.js'\nimport Detail from './components/List/Detail'\n\nimport imgA from './img/bada.png';\nimport imgB from './img/b.jpg';\nimport imgPen from './img/pen.png';\nimport img1 from './img/1.jpg';\nimport img2 from './img/2.jpg';\nimport img3 from './img/3.jpg';\nimport img4 from './img/4.jpg';\n\nimport Posts from './components/Posts/Posts/Posts'\nimport Form from './components/Form/Form'\nimport Navbar from './components/Navbar'\nimport Sidebar from './components/Sidebar'\nimport Home from './components/Home/Home'\nimport About from './components/About/About'\nimport Admin from './components/Admin/Admin'\n\nimport Scroll from './components/Scroll/Scroll'\n\nfunction App() {\n  \n  let history =useHistory();\n\n  // id\n  const [currentId, setCurrentId] = useState(0);\n\n  const dispatch = useDispatch();\n\n  const [isOpen,setIsOpen] = useState(false);\n\n  const toggle = () => {\n    setIsOpen(!isOpen)\n  }\n\n  return (\n    <div className=\"App\">\n\n        <Sidebar isOpen={isOpen} toggle={toggle}/>\n        <Navbar toggle={toggle}/>\n\n    {/* 항상 보여지도록 하기위해 -1으로 설정함 */}\n    <Scroll showBelow={-1} />\n\n\n    <Switch>\n    {/* 메인페이지 */}\n    <Route exact path=\"/\">\n      <Home currentId={currentId}></Home>\n  </Route>\n    \n\n  {/* 검색페이지 */}\n  <Route path=\"/search\">\n    {/* <Search 시목록 ={시목록} 검색값={검색값}/> */}\n  </Route>\n\n  {/* 시작성,수정 페이지 */}\n    <Route path=\"/write\">\n      <Form currentId={currentId} setCurrentId={setCurrentId} ></Form>\n    </Route> \n\n\n  {/* 시 리스트페이지 */}\n    <Route path=\"/list\">\n        <List currentId={currentId} setCurrentId={setCurrentId}></List>\n    </Route>\n\n\n    <Route path=\"/detail\">\n      <Detail currentId={currentId} setCurrentId={setCurrentId}></Detail>\n      </Route>\n\n{/* 로그인페이지 */}\n     <Route path=\"/login\">\n      <Auth></Auth>\n    </Route> \n\n\n{/* 마이페이지 */}\n    <Route path=\"/mypage\">\n     <Mypage></Mypage>\n    </Route> \n\n{/* 소개페이지 */}\n    <Route path =\"/about\">\n      <About></About>\n    </Route>\n    \n    {/* 어드민페이지 */}\n    <Route path =\"/admin\">\n      <Admin></Admin>\n    </Route>\n\n    </Switch>\n\n    </div>\n  );\n}\nexport default App;","import {AUTH, LOGOUT} from '../constants/actionTypes';\r\n\r\nconst authReducer =(state = {authData : null }, action) => {\r\n    switch(action.type){\r\n        case AUTH:\r\n            console.log('Auth action.data : ');\r\n            console.log(action?.data);\r\n            //localStorage에 저장\r\n            localStorage.setItem('profile',JSON.stringify({...action?.data}))\r\n            // Auth컴포넌트에서 넣어준 데이터 result와 token출력\r\n            return {...state, authData: action?.data ,loading: false, errors: null};\r\n        case LOGOUT:\r\n            localStorage.clear();\r\n            return {...state, authData: null, loading : false, errors: null};\r\n        default : \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authReducer;","import { combineReducers } from 'redux';\r\n\r\nimport posts from './posts'\r\nimport auth from './auth';\r\nimport comments from './comments';\r\n\r\nexport const reducers = combineReducers({  \r\n    posts, auth , comments\r\n});","import { FETCH_ALL, GET_POST, CREATE, UPDATE, DELETE, LIKE, HASHTAG } from '../constants/actionTypes';\r\n\r\n                //(state,action)\r\nexport default (posts=[], action)=>{\r\n    switch(action.type){\r\n        // FETCH_ALL 모든 posts(게시물)을 가져오기\r\n        case FETCH_ALL:\r\n            return action.payload;\r\n        case GET_POST:\r\n            return action.payload;\r\n        case HASHTAG:\r\n            return action.payload;\r\n        case CREATE :\r\n            // payload값은 acion에서 정의한 것 참조(data : post를 담고있어), \r\n            //components의 Form에서 postData state 배열 값이 데이터\r\n            sessionStorage.setItem('data',JSON.stringify({...action?.payload}))\r\n\r\n            return [...posts, action.payload];\r\n        case UPDATE :\r\n            // post._id? 왜\r\n            // map함수는 change array해서 반환\r\n            //action.payload는 update된 게시물\r\n            // 게시물 id가 update된 게시물의 아이디와 같으면 update된 게시물을 반환\r\n            return posts.map((post)=>post.id === action.payload.id ? \r\n            action.payload : post)\r\n        case DELETE:\r\n            // 하나빼고 모두 return\r\n            return posts.filter((post)=> post.id !== action.payload);\r\n        case LIKE :\r\n            // update랑 똑같아\r\n            return posts.map((post)=>post.id === action.payload.id ? \r\n            action.payload : post)\r\n        default:\r\n            return posts;\r\n    }\r\n}\r\n","import {GET_POST, COMMENT, COM_UPDATE, COM_DELETE} from '../constants/actionTypes';\r\n\r\nexport default (comments=[],action)=>{\r\n    switch(action.type){\r\n        // getPost했을 때 comments불러와짐\r\n        case GET_POST: \r\n            return action.payload.comments\r\n        case COMMENT:\r\n            return [...comments, action.payload.comment]\r\n        case COM_UPDATE:\r\n            return comments.map((comment)=>comment.id === action.payload.commentId?\r\n            action.payload.comment : comment)\r\n        case COM_DELETE:\r\n            return comments.filter((comment)=>comment.id !== action.payload)\r\n        default:\r\n            return comments\r\n    }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\n\nimport {BrowserRouter} from 'react-router-dom';\n\n// redux 셋팅\nimport {Provider} from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { reducers } from './reducers';\n\nconst store= createStore(reducers, compose(applyMiddleware(thunk)));\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    {/* Provider로 감싸진 애들은 모두 같은 state를 공유 */}\n    <Provider store={store}>\n      <App />\n    </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}